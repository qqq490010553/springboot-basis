<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.api.dao.UserInfoDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.api.entity.UserInfoEntity" id="userInfoMap">
        <result property="userInfoId" column="user_info_id"/>
        <result property="userId" column="user_id"/>
        <result property="headImg" column="head_img"/>
        <result property="realName" column="real_name"/>
        <result property="recommendCode" column="recommend_code"/>
        <result property="parentId" column="parent_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="isValid" column="is_valid"/>
        <result property="payPwd" column="pay_pwd"/>
        <result property="userLeve" column="user_leve"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.modules.api.entity.UserInfoEntity">
		select * from tb_user_info where user_info_id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.modules.api.entity.UserInfoEntity">
		select * from tb_user_info
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by user_info_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_user_info 
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.api.entity.UserInfoEntity" useGeneratedKeys="true" keyProperty="userInfoId">
		insert into tb_user_info
		(
			`user_id`, 
			`head_img`, 
			`real_name`, 
			`recommend_code`, 
			`parent_id`, 
			`create_time`, 
			`update_time`, 
			`create_by`, 
			`update_by`, 
			`is_valid`, 
			`pay_pwd`, 
			`user_leve`
		)
		values
		(
			#{userId}, 
			#{headImg}, 
			#{realName}, 
			#{recommendCode}, 
			#{parentId}, 
			#{createTime}, 
			#{updateTime}, 
			#{createBy}, 
			#{updateBy}, 
			#{isValid}, 
			#{payPwd}, 
			#{userLeve}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.api.entity.UserInfoEntity">
		update tb_user_info 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="headImg != null">`head_img` = #{headImg}, </if>
			<if test="realName != null">`real_name` = #{realName}, </if>
			<if test="recommendCode != null">`recommend_code` = #{recommendCode}, </if>
			<if test="parentId != null">`parent_id` = #{parentId}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="createBy != null">`create_by` = #{createBy}, </if>
			<if test="updateBy != null">`update_by` = #{updateBy}, </if>
			<if test="isValid != null">`is_valid` = #{isValid}, </if>
			<if test="payPwd != null">`pay_pwd` = #{payPwd}, </if>
			<if test="userLeve != null">`user_leve` = #{userLeve}</if>
		</set>
		where user_info_id = #{userInfoId}
	</update>
	
	<delete id="delete">
		delete from tb_user_info where user_info_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_user_info where user_info_id in 
		<foreach item="userInfoId" collection="array" open="(" separator="," close=")">
			#{userInfoId}
		</foreach>
	</delete>

</mapper>